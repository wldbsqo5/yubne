Breakpoint 1, 0x0804830a in main ()
(gdb) disas main
Dump of assembler code for function main:
=> 0x0804830a <+0>:     push   %ebp                = 여기부터 진행하겟다는 뜻
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret

   (gdb) ni 로 시작
   (gdb) x/12x $esp
   0xbfffedcc:     0x42015574      0x00000001      0xbfffee14      0xbfffee1c
   0xbfffeddc:     0x4001582c      0x00000001      0x08048244      0x00000000
   0xbfffedec:     0x08048265      0x0804830a      0x00000001      0xbfffee14
   (gdb) info reg
   eax            0x1      1
   ecx            0x42015554       1107383636
   edx            0x40016bc8       1073834952
   ebx            0x42130a14       1108544020
   esp            0xbfffedcc       0xbfffedcc
   ebp            0xbfffede8       0xbfffede8
   esi            0x40015360       1073828704
   edi            0x8048364        134513508
   eip            0x804830a        0x804830a <main>
   eflags         0x246    [ PF ZF IF ]
   cs             0x23     35
   ss             0x2b     43
   ds             0x2b     43
   es             0x2b     43
   fs             0x0      0
   gs             0x33     51

   (gdb) x/12x $esp
0xbfffedc8:     0xbfffede8      0x42015574      0x00000001      0xbfffee14
0xbfffedd8:     0xbfffee1c      0x4001582c      0x00000001      0x08048244
0xbfffede8:     0x00000000      0x08048265      0x0804830a      0x00000001

(gdb) info reg
eax            0x1      1
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedc8       0xbfffedc8
ebp            0xbfffede8       0xbfffede8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x804830b        0x804830b <main+1>
eflags         0x346    [ PF ZF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51

(gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
=> 0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret

   (gdb) x/12x $esp
   0xbfffedc8:     0xbfffede8      0x42015574      0x00000001      0xbfffee14
   0xbfffedd8:     0xbfffee1c      0x4001582c      0x00000001      0x08048244
   0xbfffede8:     0x00000000      0x08048265      0x0804830a      0x00000001
   (gdb) info reg
   eax            0x1      1
   ecx            0x42015554       1107383636
   edx            0x40016bc8       1073834952
   ebx            0x42130a14       1108544020
   esp            0xbfffedc8       0xbfffedc8
   ebp            0xbfffedc8       0xbfffedc8
   esi            0x40015360       1073828704
   edi            0x8048364        134513508
   eip            0x804830d        0x804830d <main+3>
   eflags         0x346    [ PF ZF TF IF ]
   cs             0x23     35
   ss             0x2b     43
   ds             0x2b     43
   es             0x2b     43
   fs             0x0      0
   gs             0x33     51


   (gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
=> 0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret

   (gdb) x/12x $esp
   0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
   0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
   0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
   (gdb) info reg
   eax            0x1      1
   ecx            0x42015554       1107383636
   edx            0x40016bc8       1073834952
   ebx            0x42130a14       1108544020
   esp            0xbfffedc0       0xbfffedc0
   ebp            0xbfffedc8       0xbfffedc8
   esi            0x40015360       1073828704
   edi            0x8048364        134513508
   eip            0x8048310        0x8048310 <main+6>
   eflags         0x386    [ PF SF TF IF ]
   cs             0x23     35
   ss             0x2b     43
   ds             0x2b     43
   es             0x2b     43
   fs             0x0      0
   gs             0x33     51



   (gdb) ni
0x08048313 in main ()
(gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
=> 0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
(gdb) info reg
eax            0x1      1
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedc0       0xbfffedc0
ebp            0xbfffedc8       0xbfffedc8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x8048313        0x8048313 <main+9>
eflags         0x386    [ PF SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51



(gdb) ni
0x08048318 in main ()
(gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
=> 0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedc0       0xbfffedc0
ebp            0xbfffedc8       0xbfffedc8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x8048318        0x8048318 <main+14>
eflags         0x386    [ PF SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) ni
0x0804831a in main ()
(gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
=> 0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedc0       0xbfffedc0
ebp            0xbfffedc8       0xbfffedc8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x804831a        0x804831a <main+16>
eflags         0x386    [ PF SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) si
0x080482f4 in sub ()
(gdb) disas sub
Dump of assembler code for function sub:
=> 0x080482f4 <+0>:     push   %ebp
   0x080482f5 <+1>:     mov    %esp,%ebp
   0x080482f7 <+3>:     sub    $0x8,%esp
   0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
   0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
   0x08048308 <+20>:    leave
   0x08048309 <+21>:    ret


   (gdb) x/12x $esp
   0xbfffedbc:     0x0804831f      0x42130a14      0x40015360      0xbfffede8
   0xbfffedcc:     0x42015574      0x00000001      0xbfffee14      0xbfffee1c
   0xbfffeddc:     0x4001582c      0x00000001      0x08048244      0x00000000

   (gdb) info reg
   eax            0x0      0
   ecx            0x42015554       1107383636
   edx            0x40016bc8       1073834952
   ebx            0x42130a14       1108544020
   esp            0xbfffedbc       0xbfffedbc
   ebp            0xbfffedc8       0xbfffedc8
   esi            0x40015360       1073828704
   edi            0x8048364        134513508
   eip            0x80482f4        0x80482f4 <sub>
   eflags         0x386    [ PF SF TF IF ]
   cs             0x23     35
   ss             0x2b     43
   ds             0x2b     43
   es             0x2b     43
   fs             0x0      0
   gs             0x33     51


   (gdb) ni
0x080482f5 in sub ()
(gdb) disas sub
Dump of assembler code for function sub:
   0x080482f4 <+0>:     push   %ebp
=> 0x080482f5 <+1>:     mov    %esp,%ebp
   0x080482f7 <+3>:     sub    $0x8,%esp
   0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
   0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
   0x08048308 <+20>:    leave
   0x08048309 <+21>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedb8:     0xbfffedc8      0x0804831f      0x42130a14      0x40015360
0xbfffedc8:     0xbfffede8      0x42015574      0x00000001      0xbfffee14
0xbfffedd8:     0xbfffee1c      0x4001582c      0x00000001      0x08048244
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedb8       0xbfffedb8
ebp            0xbfffedc8       0xbfffedc8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x80482f5        0x80482f5 <sub+1>
eflags         0x386    [ PF SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51

(gdb) ni
0x080482f7 in sub ()

(gdb) disas sub
Dump of assembler code for function sub:
   0x080482f4 <+0>:     push   %ebp
   0x080482f5 <+1>:     mov    %esp,%ebp
=> 0x080482f7 <+3>:     sub    $0x8,%esp
   0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
   0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
   0x08048308 <+20>:    leave
   0x08048309 <+21>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedb8:     0xbfffedc8      0x0804831f      0x42130a14      0x40015360
0xbfffedc8:     0xbfffede8      0x42015574      0x00000001      0xbfffee14
0xbfffedd8:     0xbfffee1c      0x4001582c      0x00000001      0x08048244
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedb8       0xbfffedb8
ebp            0xbfffedb8       0xbfffedb8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x80482f7        0x80482f7 <sub+3>
eflags         0x386    [ PF SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) ni
0x080482fa in sub ()
(gdb) disas sub
Dump of assembler code for function sub:
   0x080482f4 <+0>:     push   %ebp
   0x080482f5 <+1>:     mov    %esp,%ebp
   0x080482f7 <+3>:     sub    $0x8,%esp
=> 0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
   0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
   0x08048308 <+20>:    leave
   0x08048309 <+21>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedb0:     0x42130a14      0x4000c660      0xbfffedc8      0x0804831f
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedb0       0xbfffedb0
ebp            0xbfffedb8       0xbfffedb8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x80482fa        0x80482fa <sub+6>
eflags         0x382    [ SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) ni
0x08048301 in sub ()
(gdb) disas sub
Dump of assembler code for function sub:
   0x080482f4 <+0>:     push   %ebp
   0x080482f5 <+1>:     mov    %esp,%ebp
   0x080482f7 <+3>:     sub    $0x8,%esp
   0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
=> 0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
   0x08048308 <+20>:    leave
   0x08048309 <+21>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedb0:     0x42130a14      0x00000014      0xbfffedc8      0x0804831f
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedb0       0xbfffedb0
ebp            0xbfffedb8       0xbfffedb8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x8048301        0x8048301 <sub+13>
eflags         0x382    [ SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51

(gdb) ni
0x08048308 in sub ()
(gdb) disas sub
Dump of assembler code for function sub:
   0x080482f4 <+0>:     push   %ebp
   0x080482f5 <+1>:     mov    %esp,%ebp
   0x080482f7 <+3>:     sub    $0x8,%esp
   0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
   0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
=> 0x08048308 <+20>:    leave
   0x08048309 <+21>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedb0:     0x00000028      0x00000014      0xbfffedc8      0x0804831f
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedb0       0xbfffedb0
ebp            0xbfffedb8       0xbfffedb8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x8048308        0x8048308 <sub+20>
eflags         0x382    [ SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) ni
0x08048309 in sub ()
(gdb) disas sub
Dump of assembler code for function sub:
   0x080482f4 <+0>:     push   %ebp
   0x080482f5 <+1>:     mov    %esp,%ebp
   0x080482f7 <+3>:     sub    $0x8,%esp
   0x080482fa <+6>:     movl   $0x14,-0x4(%ebp)
   0x08048301 <+13>:    movl   $0x28,-0x8(%ebp)
   0x08048308 <+20>:    leave
=> 0x08048309 <+21>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedbc:     0x0804831f      0x42130a14      0x40015360      0xbfffede8
0xbfffedcc:     0x42015574      0x00000001      0xbfffee14      0xbfffee1c
0xbfffeddc:     0x4001582c      0x00000001      0x08048244      0x00000000
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedbc       0xbfffedbc
ebp            0xbfffedc8       0xbfffedc8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x8048309        0x8048309 <sub+21>
eflags         0x382    [ SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) ni
0x0804831f in main ()
(gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
=> 0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
   0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret
End of assembler dump.
(gdb) x/12x $esp
0xbfffedc0:     0x42130a14      0x40015360      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
(gdb) info reg
eax            0x0      0
ecx            0x42015554       1107383636
edx            0x40016bc8       1073834952
ebx            0x42130a14       1108544020
esp            0xbfffedc0       0xbfffedc0
ebp            0xbfffedc8       0xbfffedc8
esi            0x40015360       1073828704
edi            0x8048364        134513508
eip            0x804831f        0x804831f <main+21>
eflags         0x382    [ SF TF IF ]
cs             0x23     35
ss             0x2b     43
ds             0x2b     43
es             0x2b     43
fs             0x0      0
gs             0x33     51


(gdb) ni
0x08048326 in main ()
(gdb) x/12x $esp
0xbfffedc0:     0x42130a14      0x0000000a      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
(gdb) ni
0x0804832d in main ()
(gdb) x/12x $esp
0xbfffedc0:     0x0000001e      0x0000000a      0xbfffede8      0x42015574
0xbfffedd0:     0x00000001      0xbfffee14      0xbfffee1c      0x4001582c
0xbfffede0:     0x00000001      0x08048244      0x00000000      0x08048265
(gdb) disas main
Dump of assembler code for function main:
   0x0804830a <+0>:     push   %ebp
   0x0804830b <+1>:     mov    %esp,%ebp
   0x0804830d <+3>:     sub    $0x8,%esp
   0x08048310 <+6>:     and    $0xfffffff0,%esp
   0x08048313 <+9>:     mov    $0x0,%eax
   0x08048318 <+14>:    sub    %eax,%esp
   0x0804831a <+16>:    call   0x80482f4 <sub>
   0x0804831f <+21>:    movl   $0xa,-0x4(%ebp)
   0x08048326 <+28>:    movl   $0x1e,-0x8(%ebp)
=> 0x0804832d <+35>:    mov    $0x0,%eax
   0x08048332 <+40>:    leave
   0x08048333 <+41>:    ret


   (gdb) ni
   0x08048332 in main ()
   (gdb) ni
   0x08048333 in main ()
   (gdb) ni
   0x42015574 in __libc_start_main () from /lib/tls/libc.so.6

   vi assem4.c 끝
