  @ 리버싱-인젝션

  1. 인젝션
  - 실행중인 프로세스에 dll또는 다른 코드를 강제로 삽입하여 해당 프로세스에서 코드가 실행되게 하는 것
  - 유형 : 라이브러리 파일을 삽입하는 dll 인젝션, 메모리에 영역에 코드를 삽입하는 코드 인젝션

  2. 인젝션을 사용하는경우
  - 프로그램기능을 개선 및 추가, 프로그램 오류및 버그패치
  - 자녀 보호 및 유해 사이트 접근 차단과 같은 실시간 감시 프로그램
  - 메세지 후킹 및 api 후킹 기법
  - 악성코드 유포

  3. DLL 인젝션 방법

   - DLL 인젝션을 하기 위해서 DLL 인젝터와 인젝션 코드가 필요하다.
   - DLL 인젝터는 DLL 인젝션 대상 프로세스에서 코드가 실행될 수 있도록 하며, 다음과 같은 동작을 실시한다.

  	대상 프로세스 핸들 획득
  	대상 프로세스에 공간 확보
  	인젝션 DLL 이름 쓰기
  	라이브러리 로드
  	원격 쓰레드 생성 및 실행

  4. DLL 인젝션 단계

   1) 인젝션할 프로세스 제어권을 획득한다.

   - 프로세스에 DLL을 인젝션하려면, 해당 프로세스에 대한 PID 및 제어권이 필요하다.
   - 'OpenProcess' 함수를 이용하여 프로세스 핸들을 획득한다.

   - OpenProcess : 특정 프로세스에 대한 정보를 얻거나 제어를 하기 위해서 실행중인 프로세스 핸들을 얻는 함수

   2) 인젝션할 DLL 경로를 해당 프로세스에 기록한다.

   - 프로세스 핸들을 획득하였다면, 프로세스가 사용하는 메모리 내부에 접근이 가능해진다.
   - 'VirtualAllocEx' 함수를 이용하여 DLL 경로 문자열 길이만큼 공간을 확보하고, 'WriteProcessMemory' 함수를
     이용하여 메모리에 DLL 경로를 기록한다.
   - 이 과정이 완료되면 해당 프로그램이 실행되면 인젝션될 DLL 경로를 찾아서 DLL 로드 준비 상태가 완료된다.

   - VirtualAllocEx : 메모리 공간을 확보하는 함수
   - WriteProcessMemory : 확보된 메모리 공간에 데이터를 기록할 수 있는 함수

   3) 기록된 DLL를 프로세스에 로드하기 위한 작업을 실시한다.

   - 'KERNEL32.dll'에서 지원하는 'LoadLibrary' 함수를 이용하여 DLL를 로드해야 한다.
   - 이때, 'LoadLibrary' 함수 주소를 모르기 때문에 호출이 불가능하므로 'GetModuleHandle' 함수를 이용하여          'KERNEL32.dll'의 핸들을 획득한 이후, 'GetProcAddress' 함수를 이용하여 'LoadLibrary' 함수 주소를 획득해야 한다.
   - 이 과정이 완료되면 'LoadLibrary' 함수가 호출되면서 인젝션한 DLL이 프로세스 내부에서 실행된다.

   - GetModuleHandle : 이미 로드한 모듈의 핸들을 얻는 함수
   - LoadLibrary : DLL를 로드하는 함수
   - GetProcAddress : 메모리에 로드한 DLL에서 함수 주소를 얻는 함수

   4) 기록된 DLL을 원격 쓰레드를 생성하여 프로세스에서 로드한다.

   - 'CreateRemoteThread' 함수를 이용하여 원격에서 프로세스 내부에 쓰레드를 생성 및 실행하여 쓰레드의 시작점으로 'LoadLibrary' 함수 주소를 삽입한다.
   - 그럼 쓰레드 생성과 동시에 'LoadLibrary' 함수가 호출되면서 인젝션한 DLL이 프로세스 내부에 로드한다.

   - CreateRemoteThread : 다른 프로세스의 가장 주소 공간에서 프로세스를 실행하는 함수


  /* injector 2776(pid) "C:\리버싱\01_실습\05_인젝션\실습-1(DLL 인젝터 생성)\실습-1(DLL 인젝터 생성)\lock.dll"
     hookmain 2384(pid) "C:\리버싱\01_실습\05_인젝션\실습-2(DLL 인젝션)\실습-2(DLL 인젝션 분석)\keyhook.dll" */

     
