
[level6@ftz level6]$ gdb -q tn
Reading symbols from /home/level6/tn...done.

(gdb) disas main
Dump of assembler code for function main:
   0x080484f8 <+0>:     push   %ebp
   0x080484f9 <+1>:     mov    %esp,%ebp
   - 함수 프롤로그

   0x080484fb <+3>:     sub    $0x8,%esp
   0x080484fe <+6>:     sub    $0xc,%esp
   - main 함수에서 사용할 변수의 공간 확보를 실시

   0x08048501 <+9>:     push   $0x80486f2
   0x08048506 <+14>:    call   0x8048384 <system@plt>
   -cat hint 를 스택에 push , system 함수를 호출

   0x0804850b <+19>:    add    $0x10,%esp
   0x0804850e <+22>:    call   0x8048354 <getchar@plt>
   -getchar 함수를 호출

   0x08048513 <+27>:    sub    $0xc,%esp
   0x08048516 <+30>:    push   $0x80486fb
   0x0804851b <+35>:    call   0x8048384 <system@plt>
   -clear를 스택에 push , system 함수를 호출

   0x08048520 <+40>:    add    $0x10,%esp
   0x08048523 <+43>:    sub    $0xc,%esp
   0x08048526 <+46>:    push   $0x8048720
   0x0804852b <+51>:    call   0x80483c4 <printf@plt>


   0x08048530 <+56>:    add    $0x10,%esp
   0x08048533 <+59>:    sub    $0xc,%esp
   0x08048536 <+62>:    push   $0x8048760
   0x0804853b <+67>:    call   0x80483c4 <printf@plt>

   0x08048540 <+72>:    add    $0x10,%esp
   0x08048543 <+75>:    sub    $0xc,%esp
   0x08048546 <+78>:    push   $0x80487a0
   0x0804854b <+83>:    call   0x80483c4 <printf@plt>

   0x08048550 <+88>:    add    $0x10,%esp
   0x08048553 <+91>:    sub    $0xc,%esp
   0x08048556 <+94>:    push   $0x8048760
   0x0804855b <+99>:    call   0x80483c4 <printf@plt>

   0x08048560 <+104>:   add    $0x10,%esp
   0x08048563 <+107>:   sub    $0xc,%esp
   0x08048566 <+110>:   push   $0x8048760
   0x0804856b <+115>:   call   0x80483c4 <printf@plt>

   0x08048570 <+120>:   add    $0x10,%esp
   0x08048573 <+123>:   sub    $0xc,%esp
   0x08048576 <+126>:   push   $0x80487e0
   0x0804857b <+131>:   call   0x80483c4 <printf@plt>

   0x08048580 <+136>:   add    $0x10,%esp
   0x08048583 <+139>:   sub    $0xc,%esp
   0x08048586 <+142>:   push   $0x8048820
   0x0804858b <+147>:   call   0x80483c4 <printf@plt>

   0x08048590 <+152>:   add    $0x10,%esp
   0x08048593 <+155>:   sub    $0xc,%esp
   0x08048596 <+158>:   push   $0x8048760
   0x0804859b <+163>:   call   0x80483c4 <printf@plt>

   0x080485a0 <+168>:   add    $0x10,%esp
   0x080485a3 <+171>:   sub    $0xc,%esp
   0x080485a6 <+174>:   push   $0x8048860
   0x080485ab <+179>:   call   0x80483c4 <printf@plt>

   0x080485b0 <+184>:   add    $0x10,%esp
   0x080485b3 <+187>:   sub    $0x8,%esp
   0x080485b6 <+190>:   push   $0x80484e0
   0x080485bb <+195>:   push   $0x2
   0x080485bd <+197>:   call   0x8048374 <signal@plt>
   - 스택에 '0x80484e0',0x2를 push하고 signal 함수를 호출

   0x080485c2 <+202>:   add    $0x10,%esp
   0x080485c5 <+205>:   sub    $0xc,%esp
   0x080485c8 <+208>:   push   $0x80488a0
   0x080485cd <+213>:   call   0x80483c4 <printf@plt>

   0x080485d2 <+218>:   add    $0x10,%esp
   0x080485d5 <+221>:   sub    $0x8,%esp
   0x080485d8 <+224>:   lea    -0x4(%ebp),%eax
   0x080485db <+227>:   push   %eax
   0x080485e1 <+233>:   call   0x8048394 <scanf@plt>
   - 스택에 eax, 0x80488c3를 push , scanf 함수를 호출

   0x080485e6 <+238>:   add    $0x10,%esp
   0x080485e9 <+241>:   cmpl   $0x1,-0x4(%ebp)
   0x080485ed <+245>:   jne    0x80485ff <main+263>
   - cmp 연산 결과 값에 따라서 'jne'에 의해서 다음 코드 진행 or 분기 실시
      1 - [ebp -4] 연산 결과가 '0'이면, 다음 코드를 진행
      1 - [ebp -4] 연산 결과가 '0'이 아니면 , 0x80485ff <main+263>으로 점프

   0x080485ef <+247>:   sub    $0xc,%esp
   0x080485f2 <+250>:   push   $0x80488c6
   0x080485f7 <+255>:   call   0x8048384 <system@plt>
   -"telnet 203.245.15.76"를 스택에 push하고 system 함수를 호출

   0x080485fc <+260>:   add    $0x10,%esp
   0x080485ff <+263>:   cmpl   $0x2,-0x4(%ebp)
   0x08048603 <+267>:   jne    0x8048615 <main+285>
   - cmp 연산 결과 값에 따라서 'jne'에 의해서 다음 코드 진행 or 분기 실시
      2 - [ebp -4] 연산 결과가 '0'이면, 다음 코드를 진행
      2 - [ebp -4] 연산 결과가 '0'이 아니면 , 0x8048384 <main+285>으로 점프

   0x08048605 <+269>:   sub    $0xc,%esp
   0x08048608 <+272>:   push   $0x80488db
   0x0804860d <+277>:   call   0x8048384 <system@plt>
    -"telnet 203.238.129.97"를 스택에 push , system 함수를 호출

   0x08048612 <+282>:   add    $0x10,%esp
   0x08048615 <+285>:   cmpl   $0x3,-0x4(%ebp)
   0x08048619 <+289>:   jne    0x804862b <main+307>
   - cmp 연산 결과 값에 따라서 'jne'에 의해서 다음 코드 진행 or 분기 실시
      3 - [ebp -4] 연산 결과가 '0'이면, 다음 코드를 진행
      3 - [ebp -4] 연산 결과가 '0'이 아니면 , 0x804862b <main+307>으로 점프

   0x0804861b <+291>:   sub    $0xc,%esp
   0x0804861e <+294>:   push   $0x80488f1
   0x08048623 <+299>:   call   0x8048384 <system@plt>
   -"telnet 210.120.128.180"를 스택에 push , system 함수를 호출

   0x08048628 <+304>:   add    $0x10,%esp
   0x0804862b <+307>:   cmpl   $0x1,-0x4(%ebp)
   0x0804862f <+311>:   je     0x804864d <main+341>
   - cmp 연산 결과 값에 따라서 'je'에 의해서 다음 코드 진행 or 분기 실시
      1 - [ebp -4] 연산 결과가 '0'이면, 다음 코드를 진행
      1 - [ebp -4] 연산 결과가 '0'이 아니면 , 0x804864d <main+341>으로 점프

   0x08048631 <+313>:   cmpl   $0x2,-0x4(%ebp)
   0x08048635 <+317>:   je     0x804864d <main+341>
   - cmp 연산 결과 값에 따라서 'je'에 의해서 다음 코드 진행 or 분기 실시
      2 - [ebp -4] 연산 결과가 '0'이면, 다음 코드를 진행
      2 - [ebp -4] 연산 결과가 '0'이 아니면 , 0x804864d <main+341>으로 점프

   0x08048637 <+319>:   cmpl   $0x3,-0x4(%ebp)
   0x0804863b <+323>:   je     0x804864d <main+341>
   - cmp 연산 결과 값에 따라서 'jne'에 의해서 다음 코드 진행 or 분기 실시
      3 - [ebp -4] 연산 결과가 '0'이면, 다음 코드를 진행
      3 - [ebp -4] 연산 결과가 '0'이 아니면 , 0x804864d <main+341>으로 점프

   0x0804863d <+325>:   sub    $0xc,%esp
   0x08048640 <+328>:   push   $0x8048920
   0x08048645 <+333>:   call   0x80483c4 <printf@plt>
   - "잘못 입력하셨습니다. 접속을 종료합니다."  출력

   0x0804864a <+338>:   add    $0x10,%esp
   0x0804864d <+341>:   leave
   0x0804864e <+342>:   ret
