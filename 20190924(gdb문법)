Inter 문법     mov (destination) (source) [다다음달 리버싱]
AT&T 문법      mov (source) (destination) [gdb 기본값]



0x080482fc <+0>:     push   %ebp
0x080482fd <+1>:     mov    %esp,%ebp
- 함수 프롤로그

0x080482ff <+3>:     sub    $0x8,%esp
- ESP-8byte 만큼 공간을 확보한다.

0x08048302 <+6>:     and    $0xfffffff0,%esp
- ESP 스택 내용과 0xfffffff0 값을 bit AND 연산을 실시한다.
- 그럼 ESP 마지막 4bit 부분이 0으로 된다.

0x08048305 <+9>:     mov    $0x0,%eax
- '0'을 EAX 레지스터에 대입한다.

0x0804830a <+14>:    sub    %eax,%esp
- ESP 값을 EAX 값 만큼 뺀다. EAX '0'이기 때문에 ESP 값은 변경되지 않는다.

0x0804830c <+16>:    sub    $0x4,%esp
- ESP-4Byte 만큼 공간을 확보한다.

0x0804830f <+19>:    push   $0x3
0x08048311 <+21>:    push   $0x2
0x08048313 <+23>:    push   $0x1
- 스택에 3-> 2-> 1 순으로 저장한다.

0x08048315 <+25>:    call   0x80482f4 <function>
- function 함수를 호출한다.

0x0804831a <+30>:    add    $0x10,%esp
- ESP+16Byte 만큼 공간을 제거한다.

0x0804831d <+33>:    mov    $0x0,%eax
- EAX 값을 '0' 으로 초기화한다.

0x08048322 <+38>:    leave
- 함수 에필로그 (the end)

0x08048323 <+39>:    ret
