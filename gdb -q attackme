[level13@ftz tmp]$ gdb -q attackme

(gdb) disas main

   0x080484a0 <+0>:     push   %ebp
   0x080484a1 <+1>:     mov    %esp,%ebp
   - 함수 프롤로그

   0x080484a3 <+3>:     sub    $0x418,%esp
   - 스택(esp)에 1048byte 만큼 공간 확보
   - 1048byte = buf(1024byte) + dummy(24byte)

   0x080484a9 <+9>:     movl   $0x1234567,-0xc(%ebp)
   - '0x1234567'값(스택 가드)을 ebp-c 에 대입

   0x080484b0 <+16>:    sub    $0x8,%esp
   - 스택에 8byte 만큼 공간 확보

   0x080484b3 <+19>:    push   $0xc16
   0x080484b8 <+24>:    push   $0xc16
   - 다음래밸 uid,gid c16, c16

   0x080484bd <+29>:    call   0x8048370 <setreuid@plt>
   - 0x8048370 <setreuid@plt> 호출

   0x080484c2 <+34>:    add    $0x10,%esp
   - esp에서 16byte 만큼 공간 제거

   0x080484c5 <+37>:    cmpl   $0x1,0x8(%ebp)
   0x080484c9 <+41>:    jle    0x80484e5 <main+69>
   - 0x1 과 ebp+8 에 잇는 값을 비교
     1 >= argc 인 경우 <main+69>로 점프 실시
     1 >= argc가 아닌 경우, 다음 코드를 진행

   0x080484cb <+43>:    sub    $0x8,%esp
   - 스택에 8byte 만큼 공간 확보

   0x080484ce <+46>:    mov    0xc(%ebp),%eax
   0x080484d1 <+49>:    add    $0x4,%eax
   0x080484d4 <+52>:    pushl  (%eax)
   - 스택에 eax를 push

   0x080484d6 <+54>:    lea    -0x418(%ebp),%eax
   0x080484dc <+60>:    push   %eax
   - eax 호출

   0x080484dd <+61>:    call   0x8048390 <strcpy@plt>
   - 0x8048390 <strcpy@plt>

   0x080484e2 <+66>:    add    $0x10,%esp
   0x080484e5 <+69>:    cmpl   $0x1234567,-0xc(%ebp)
   0x080484ec <+76>:    je     0x804850d <main+109>

   0x080484ee <+78>:    sub    $0xc,%esp
   - 스택에 12byte 만큼 공간 확보

   0x080484f1 <+81>:    push   $0x80485a0
   0x080484f6 <+86>:    call   0x8048360 <printf@plt>

   0x080484fb <+91>:    add    $0x10,%esp
   0x080484fe <+94>:    sub    $0x8,%esp
   - 스택에 8byte 만큼 공간 확보

   0x08048501 <+97>:    push   $0xb
   0x08048503 <+99>:    push   $0x0

   0x08048505 <+101>:   call   0x8048380 <kill@plt>
   - 0x8048380 <kill@plt>

   0x0804850a <+106>:   add    $0x10,%esp
   - esp에서 16byte 만큼 공간 제거

   0x0804850d <+109>:   leave
   0x0804850e <+110>:   ret
   - 함수 에필로그
