@ 어셈블리(JNZ/JNE)

1. JNZ

 - 형식 : JNZ [Code Address]
 - 내용 : 비교 결과 값이 '0'이 아닌 경우, 즉 ZF=0이면 해당 주소로 점프한다.
 - 예제 : JNZ 401140
 - 해석 : ZF=0인 경우, 401140으로 점프한다.
 - 조건 : Operand1 != Operand2

 1) VS 2008을 이용하여 'jnz.exe' 파일을 제작한다.

 - 파일 -> 새로 만들기 -> 프로젝트 -> 빈 프로젝트 -> 위치(04_테스트) & 이름(jnz) -> 확인
 - '소스 파일' 우클릭 -> 추가 -> 새 항목 -> 'C++ 파일(.cpp)' 선택 -> 이름(jnz) -> 추가

#include <stdio.h>
#include <windows.h>
#pragma comment(lib, "user32")

int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR lpCmd, int nCmd)
{
	int num1 = 6;
	int num2 = 2;

	if(num1==num2) {
	MessageBox(NULL, "Operand1 == Operand2(ZF=1) -> Next Code", "JNZ 명령어(점프X)", MB_OK);
	} else {
	MessageBox(NULL, "Operand1 != Operand2(ZF=0) -> Jump", "JNZ 명령어(점프O)", MB_OK);
	}
	return 0;
}

 - 파일 -> 모두 저장 -> 닫기


 2) 'cl' 명령어를 이용한 최적화 컴파일 실시

cl jnz.cpp /link /debug /opt:icf,ref


3. 올리디버거를 이용한 'jnz.exe' 분석

 - 메모리 주소, 레지스터 저장 값, 스택 내용, 메모리 덤프 내용, 비교 및 분기 내용 확인


