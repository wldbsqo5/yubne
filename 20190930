  1. BoF(Buffer Over Flow)

  1) 스택(Stack)
  - 지역 변수, 함수 인자 값, 리턴 주소 정보들이 저장되는 영역
  - 해당 함수가 실행되면 메모리에 스택이 생성되고 해당 함수가 종료되면 메모리에서 사라진다.
  - 각각의 함수를 실행하면 각 함수에서 설정된 변수들을 스택(일정한 메모리 공간)에 저장하고, 그 메모리 공간을 참조한다.
  - 스택 동작 방식 : LIFO(Last-In First-Out)

  2) 메모리 구조

  - 프로그램이 실행되면 해당 프로그램을 위한 메모리가 할당된다.
  - 메모리 구조

  [낮은 주소]
        Text      실행 코드
        Data      전역 변수, 정적 변수, 초기화된 변수
        Heap      동적으로 할당된 데이터
          ↓

          ↑       지역 변수, 함수 인자값, 리턴 주소
        Stack
  [높은 주소]

  3) BoF 발생 원인

  - buf1, buf2 각각 7byte 이다.
  - 이때, buf1에 10byte 데이터가 입력된다면, 3byte를 없애는게 아니라,
    buf1 영역을 침범하여 저장하게된다.
  - 만약, 큰 데이터를 강제로 삽입하여
    buf1, buf2, SPF, RET 영역까지 침범하게 되면 이를 BoF 라고한다.
    (영역?이라는게 무엇을 ..뜻하는지 질문)
  - BoF 취약점을 이용하여 RET 주소 값에 다른 주소값(악이적인 명령어가 있는 위치)을 삽입한다면,
    시스템 정보 탈취 및 부하 현상을 발생시킬 수 있다. (쓰레기값을 넣어두는 방법도잇다.)
