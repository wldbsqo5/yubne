.globl function
        .type   function,@function
function:
        pushl   %ebp
        movl    %esp, %ebp
        subl    $24, %esp
        movl    12(%ebp), %eax
        addl    %eax, 8(%ebp)
        movl    8(%ebp), %eax
        leave
        ret
.Lfe1:
        .size   function,.Lfe1-function
.globl main
        .type   main,@function
main:
        pushl   %ebp
        movl    %esp, %ebp
        subl    $8, %esp
        andl    $-16, %esp
        movl    $0, %eax
        subl    %eax, %esp
        subl    $8, %esp
        pushl   $2
        pushl   $1
        call    function
        addl    $16, %esp
        movl    %eax, -4(%ebp)
        movl    $0, %eax
        leave
        ret

(gdb) disas main
Dump of assembler code for function main:
0x08048305 <+0>:     push   %ebp
0x08048306 <+1>:     mov    %esp,%ebp
0x08048308 <+3>:     sub    $0x8,%esp
0x0804830b <+6>:     and    $0xfffffff0,%esp
0x0804830e <+9>:     mov    $0x0,%eax
0x08048313 <+14>:    sub    %eax,%esp
0x08048315 <+16>:    sub    $0x8,%esp
0x08048318 <+19>:    push   $0x2
0x0804831a <+21>:    push   $0x1
0x0804831c <+23>:    call   0x80482f4 <function>
0x08048321 <+28>:    add    $0x10,%esp
0x08048324 <+31>:    mov    %eax,-0x4(%ebp)
0x0804832c <+39>:    leave
0x0804832d <+40>:    ret


(gdb) disas function
Dump of assembler code for function function:
0x080482f4 <+0>:     push   %ebp
0x080482f5 <+1>:     mov    %esp,%ebp
0x080482f7 <+3>:     sub    $0x18,%esp
0x080482fa <+6>:     mov    0xc(%ebp),%eax
0x080482fd <+9>:     add    %eax,0x8(%ebp)
0x08048300 <+12>:    mov    0x8(%ebp),%eax
0x08048303 <+15>:    leave
0x08048304 <+16>:    ret
